@page "/"
@using System.Unicode;
<div class="text-right">Unicode @UnicodeInfo.UnicodeVersion</div>
<div class="input-group mb-3">
    <input type="search" value="@Value" class="form-control" name="q" placeholder="CHARACTER" @oninput="InputText" />
</div>
@if (UnicodeList.Any())
{
    @foreach (var UnicodeInfo in UnicodeList)
    {
<div class="row my-3">
    <div class="px-3">
        <div class="display-2 d-flex" style="max-width:8ex;min-width:8ex;font-family:monospace;">
            <span>U+</span>
            <span class="flex-fill text-right">@string.Format("{0:X4}", UnicodeInfo.CodePoint)</span>
        </div>
    </div>
    <div class="col-sm-12 col-md-auto col-xl-auto">
        <div class="row">
            <div class="px-3">
                <span class="d-inline-block p-1 border mr-1" style="min-width:2ex;min-height:2ex">&#8203;@(UnicodeInfo.GetDisplayText())&#8203;</span>
            </div>
            <div class="col-auto overflow-auto">@(UnicodeInfo.Name ?? UnicodeInfo.OldName)</div>
        </div>
        <table>
            <tbody>
                <tr>
                    <th>Category:</th>
                    <td>@UnicodeInfo.Category</td>
                </tr>
        @if (!string.IsNullOrEmpty(UnicodeInfo.VietnameseReading))
        {
                <tr>
                    <th>VietnameseReading:</th>
                    <td>@UnicodeInfo.VietnameseReading</td>
                </tr>
        }
        @if (!string.IsNullOrEmpty(UnicodeInfo.HangulReading))
        {
                <tr>
                    <th>HangulReading:</th>
                    <td>@UnicodeInfo.HangulReading</td>
                </tr>
        }
                <tr>
                    <th>CanonicalCombiningClass:</th>
                    <td>@UnicodeInfo.CanonicalCombiningClass</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>}
}
@code {
    private string Value = string.Empty;
    private List<UnicodeCharInfo> UnicodeList = new List<UnicodeCharInfo>();
    private void InputText(ChangeEventArgs e)
    {
        UnicodeList.Clear();
        UnicodeList.AddRange(new UnicodeEnumerable(e.Value.ToString()));
    } 
}
