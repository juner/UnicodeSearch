@page "/block";
@page "/block/{BlockName}";
@page "/block/{BlockName}/{PageIndex_}";
@using System.Unicode;
@inject NavigationManager nav;
<Title>@(BlockInfo is UnicodeBlock _BlockInfo ? _BlockInfo.Name + " - " : "") Unicode Block Information</Title>
@if (BlockInfo is UnicodeBlock _BlockInfo) {
    <h1>@_BlockInfo.Name (@(_BlockInfo.CodePointRange.IsSingleCodePoint
        ? $"U+{_BlockInfo.CodePointRange.FirstCodePoint:X4}" 
        : $"U+{_BlockInfo.CodePointRange.FirstCodePoint:X4} - U+{_BlockInfo.CodePointRange.LastCodePoint:X4}"))</h1>
} else {
    <h1>Unicode Blocks</h1>
}
@if (BlockInfo is UnicodeBlock)
{
    var HasPrev = PageIndex > 1;
    var HasNext = this.HasNext;
    var MaxPages = this.MaxPages;
    @if (HasPrev || HasNext) {
    <div class="row">
        @if (HasPrev) {
            <NavLink href="@($"/block/{Uri.EscapeUriString(BlockName)}/{PageIndex -1}")">Prev</NavLink>
        }
        <div class="text-center flex-fill">@(PageIndex+1)/@MaxPages</div>
        @if (HasNext) {
            <NavLink href="@($"/block/{Uri.EscapeUriString(BlockName)}/{PageIndex + 1}")">Next</NavLink>
        }
    </div>
    <div class="form-group">
        <input class="form-control-range" type="range" min="0" max="@(MaxPages-1)" step="1" value="@PageIndex" @oninput=PageChange />
    </div>
    }
    @foreach(var UnicodeInfo in UnicodeInfos)
    {
        <UnicodeMiniInfo UnicodeInfo="@UnicodeInfo" />
    }
    @if (HasPrev || HasNext) {
    <div class="row">
        @if (HasPrev) {
            <NavLink href="@($"/block/{Uri.EscapeUriString(BlockName)}/{PageIndex -1}")">Prev</NavLink>
        }
        <div class="text-center flex-fill">@(PageIndex+1)/@MaxPages</div>
        @if (HasNext) {
            <NavLink href="@($"/block/{Uri.EscapeUriString(BlockName)}/{PageIndex + 1}")">Next</NavLink>
        }
    </div>
    }
} else {
    @foreach (var _Block in UnicodeInfo.GetBlocks()) {
        <div class="row">
            <NavLink href="@($"/block/{Uri.EscapeUriString(_Block.Name)}")">
                @_Block.Name (@(
                    _Block.CodePointRange.IsSingleCodePoint 
                    ? $"U+{_Block.CodePointRange.FirstCodePoint:X4}" 
                    : $"U+{_Block.CodePointRange.FirstCodePoint:X4} - U+{_Block.CodePointRange.LastCodePoint:X4}"))
            </NavLink>
        </div>
    }
}
@code {
    [Parameter]
    public string BlockName { get; set; } = string.Empty;
    [Parameter]
    public string PageIndex_ {get;set;} = "0";
    public int PageIndex => int.TryParse(PageIndex_, out var index) ? index : 0;
    public int BufferCount {get;set;} = 0x16;
    private UnicodeBlock? BlockInfo
     => string.IsNullOrEmpty(BlockName) ? (UnicodeBlock?)null :
        UnicodeInfo.GetBlocks()
        .FirstOrDefault(b => b.Name == BlockName);
    private IEnumerable<int> BaseRange => (BlockInfo?.CodePointRange ?? Enumerable.Empty<int>());
    private IEnumerable<IEnumerable<int>> Pages => BaseRange.Buffer(BufferCount);
    private bool HasNext => Pages.Skip(PageIndex+1).Any();
    private int MaxPages => Pages.Count();
    private IEnumerable<UnicodeCharInfo> UnicodeInfos
         => Pages
             .Skip(PageIndex)
             .Take(1)
             .SelectMany(Range => Range)
             .Select(CodePoint => System.Unicode.UnicodeInfo.GetCharInfo(CodePoint));
    private void PageChange(ChangeEventArgs e){
        if (BlockInfo is UnicodeBlock _Block) {
            nav.NavigateTo($"/block/{Uri.EscapeUriString(_Block.Name)}/{e.Value.ToString()}");
        }
    }
}
