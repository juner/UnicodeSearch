@page "/";
@page "/text";
@page "/text/{Value}";
@using System.Unicode;
@inject NavigationManager nav;
<Title>@(string.IsNullOrEmpty(Value) ? "" : Value + " - ") Unicode Information</Title>
<div class="input-group mb-3">
    <input type="search" value="@Value" class="form-control" name="q" placeholder="CHARACTER" @oninput="InputText" />
</div>
@if (UnicodeList.Any())
{
    @foreach (var UnicodeInfo in UnicodeList)
    {
        <UnicodeMiniInfo UnicodeInfo="@UnicodeInfo"/>
    }
}
@code {
    [Parameter]
    public string Value { get; set; } = string.Empty;
    private List<UnicodeCharInfo> UnicodeList = new List<UnicodeCharInfo>();
    private void InputText(ChangeEventArgs e)
    {
        var Value = e.Value.ToString();
        UnicodeList.Clear();
        UnicodeList.AddRange(new UnicodeEnumerable(Value));
        if (string.IsNullOrEmpty(Value))
            nav.NavigateTo("/text/");
        else
            nav.NavigateTo($"/text/{Uri.EscapeUriString(Value)}");
    }
    protected override Task OnInitializedAsync()
    {
        InputText(new ChangeEventArgs { Value = Value ?? string.Empty }) ;
        return base.OnInitializedAsync();
    }
}
